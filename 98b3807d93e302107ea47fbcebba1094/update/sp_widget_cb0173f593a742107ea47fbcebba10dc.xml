<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>GraphApi UserList</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {	
    try {
			data.userList = [];
			
			var params = {grant_type:"client_credentials", oauth_requestor_context:requestor_context, oauth_requestor:requestor_id, oauth_provider_profile:oauth_profile_id};
			var json = new global.JSON();
			var text = json.encode(params);
			data.test = text;
			//var oAuthClient = new sn_auth.GlideOAuthClient('GraphApi', 'Users');
			
			
			var graphRequest = new sn_ws.RESTMessageV2('GraphApi', 'Users');
			
			data.requestBody = graphRequest.getRequestBody();
			data.authHeader = graphRequest.getRequestHeader("Authorization")
			data.requestHeaders = graphRequest.getRequestHeaders();
			data.requestEndpoint = graphRequest.getEndpoint();
			
			gs.debug("BeforeExecution");
			
			var response = graphRequest.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			var responseJson = JSON.parse(responseBody);
			data.JsonResponse = responseJson;
			// var userCount = (responseJson.value).length;
			// for (var i = 0; i < userCount; i++) {
			// 	var user = [];
			// 	user.displayName = reponseJson.value[i].displayName;
			// 	user.id = reponseJson.value[i].id;
			// 	user.userPrincipalName = reponseJson.value[i].userPrincipalName;
			// 	user.businessPhones = reponseJson.value[i].businessPhones;
			// 	data.userList.push(user);
			// }
			// //Save array with line breaks for readability
			// data.userList = userList.join();
			gs.debug("Execution Complete");
    } catch (ex) {
        var message = ex.message;
    }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-23 08:14:00</sys_created_on>
        <sys_id>cb0173f593a742107ea47fbcebba10dc</sys_id>
        <sys_mod_count>64</sys_mod_count>
        <sys_name>GraphApi UserList</sys_name>
        <sys_package display_value="Loaner Request" source="x_1105087_loaner_r">98b3807d93e302107ea47fbcebba1094</sys_package>
        <sys_policy/>
        <sys_scope display_value="Loaner Request">98b3807d93e302107ea47fbcebba1094</sys_scope>
        <sys_update_name>sp_widget_cb0173f593a742107ea47fbcebba10dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-23 15:27:25</sys_updated_on>
        <template><![CDATA[<table>
  <tr>
    <th>ObjectId</th>
    <th>UserPrincipalName</th>
    <th>DisplayName</th>
    <th>Phone(s)</th>
  </tr>
    <tr ng-repeat="user in data.userList">
      <td>{{user.id}}</td>
      <td>{{user.userPrincipalName}}</td>
      <td>{{user.displayName}}</td>
      <td>{{user.businessPhones}}</td>
    </tr>
</table>
{{data.test}}
<h3>
  Request
</h3>
<p>
  Endpoint:
  {{data.requestEndpoint}}
</p>
<p>
  Body:
	{{data.requestBody}}  
</p>
<p>
  Headers:
  {{data.requestHeaders}}
</p>

<h3>
  Reponse
</h3>
{{data.JsonResponse}}]]></template>
    </sp_widget>
</record_update>
